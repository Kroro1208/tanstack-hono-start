import { createFileRoute } from '@tanstack/react-router';
import { useState, useEffect } from 'react';

function Home() {
  const [apiStatus, setApiStatus] = useState<string>('Checking...');
  const [aiMessage, setAiMessage] = useState<string>('');
  const [aiResponse, setAiResponse] = useState<string>('');
  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    fetch('/api/health')
      .then(res => res.json())
      .then(data => setApiStatus(data.status))
      .catch(() => setApiStatus('Error connecting to API'));
  }, []);

  const handleAiChat = async () => {
    if (!aiMessage.trim()) return;
    
    setLoading(true);
    try {
      const response = await fetch('/api/ai/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message: aiMessage }),
      });
      const data = await response.json();
      setAiResponse(data.response || 'No response received');
    } catch (error) {
      setAiResponse('Error connecting to AI service');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-8 max-w-4xl mx-auto">
      <div className="text-center mb-12">
        <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-4">
          🚀 Welcome to {{projectName}}
        </h1>
        <p className="text-lg text-gray-600 mb-8">
          A modern fullstack application built with TanStack Router and Hono
        </p>
        
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <h2 className="text-xl font-semibold mb-4">🔋 API Status</h2>
          <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
            apiStatus === 'healthy' ? 'bg-green-100 text-green-800' : 
            apiStatus === 'Checking...' ? 'bg-yellow-100 text-yellow-800' :
            'bg-red-100 text-red-800'
          }`}>
            {apiStatus === 'healthy' && '✅'}
            {apiStatus === 'Checking...' && '⏳'}
            {apiStatus !== 'healthy' && apiStatus !== 'Checking...' && '❌'}
            <span className="ml-2">{apiStatus}</span>
          </div>
        </div>
      </div>

      <div className="grid md:grid-cols-3 gap-6 mb-12">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-3 text-blue-600">⚡ Fast Development</h3>
          <p className="text-gray-600">
            Hot reloading, TypeScript support, and modern tooling for rapid development.
          </p>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-3 text-green-600">🎯 Type Safety</h3>
          <p className="text-gray-600">
            End-to-end type safety with TypeScript from frontend to backend.
          </p>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-3 text-purple-600">📦 Modern Stack</h3>
          <p className="text-gray-600">
            Built with the latest React, TanStack Router, and Hono for optimal performance.
          </p>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 className="text-xl font-semibold mb-4">🤖 AI Assistant</h2>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Message to AI:
            </label>
            <textarea
              className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              rows={3}
              value={aiMessage}
              onChange={(e) => setAiMessage(e.target.value)}
              placeholder="Ask the AI assistant anything..."
            />
          </div>
          <button
            onClick={handleAiChat}
            disabled={loading || !aiMessage.trim()}
            className={`w-full py-2 px-4 rounded-lg font-medium transition-colors ${
              loading || !aiMessage.trim()
                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                : 'bg-blue-600 text-white hover:bg-blue-700'
            }`}
          >
            {loading ? 'Thinking...' : 'Send Message'}
          </button>
          {aiResponse && (
            <div className="mt-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                AI Response:
              </label>
              <div className="p-4 bg-gray-50 border border-gray-200 rounded-lg">
                <p className="text-gray-800 whitespace-pre-wrap">{aiResponse}</p>
              </div>
            </div>
          )}
        </div>
      </div>

      <div className="bg-gray-50 rounded-lg p-6">
        <h2 className="text-xl font-semibold mb-4">🚀 Quick Start</h2>
        <div className="space-y-2 text-sm">
          <div className="bg-gray-900 text-green-400 p-3 rounded font-mono">
            cd {{projectName}}
          </div>
          <div className="bg-gray-900 text-green-400 p-3 rounded font-mono">
            npm run dev
          </div>
        </div>
      </div>
    </div>
  );
}

export const Route = createFileRoute('/')({
  component: Home,
});